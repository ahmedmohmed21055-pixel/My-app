const express = require('express');
const cors = require('cors');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 5000;

// In-memory storage
let products = [
  {
    id: "1",
    name: "ุณูู ูุญุงุณ ุชุฑูู 2.5 ูู",
    purchasePrice: 15.50,
    sellPrice: 18.60,
    qty: 100,
    img: "https://via.placeholder.com/150",
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: "2", 
    name: "ุจุทุงุฑูุฉ AAA ุฏูุฑุงุณูู",
    purchasePrice: 2.25,
    sellPrice: 3.00,
    qty: 50,
    img: "https://via.placeholder.com/150",
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: "3",
    name: "ูุตุจุงุญ LED 9 ูุงุท",
    purchasePrice: 8.00,
    sellPrice: 12.00,
    qty: 25,
    img: "https://via.placeholder.com/150",
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: "4",
    name: "ูุงุจู USB ููุน C",
    purchasePrice: 5.75,
    sellPrice: 8.50,
    qty: 30,
    img: "https://via.placeholder.com/150",
    createdAt: new Date(),
    updatedAt: new Date()
  }
];

let idCounter = 5;

// Middleware
app.use(cors());
app.use(express.json({ limit: "10mb" }));
app.use(express.urlencoded({ extended: true }));

// API Routes
app.get("/api/items", (req, res) => {
  res.json(products);
});

app.get("/api/items/:id", (req, res) => {
  const product = products.find(p => p.id === req.params.id);
  if (!product) {
    return res.status(404).json({ success: false, message: "ุงูุตูู ุบูุฑ ููุฌูุฏ" });
  }
  res.json(product);
});

app.post("/api/items", (req, res) => {
  const { name, purchasePrice, sellPrice, qty, img } = req.body;
  
  if (!name) {
    return res.status(400).json({ success: false, message: "ุงุณู ุงูุตูู ูุทููุจ" });
  }

  const newProduct = {
    id: String(idCounter++),
    name,
    purchasePrice: Number(purchasePrice) || 0,
    sellPrice: Number(sellPrice) || 0,
    qty: Number(qty) || 0,
    img: img || "",
    createdAt: new Date(),
    updatedAt: new Date()
  };

  products.push(newProduct);
  res.status(201).json(newProduct);
});

app.put("/api/items/:id", (req, res) => {
  const index = products.findIndex(p => p.id === req.params.id);
  if (index === -1) {
    return res.status(404).json({ success: false, message: "ุงูุตูู ุบูุฑ ููุฌูุฏ" });
  }

  const { name, purchasePrice, sellPrice, qty, img } = req.body;
  
  products[index] = {
    ...products[index],
    ...(name && { name }),
    ...(purchasePrice !== undefined && { purchasePrice: Number(purchasePrice) }),
    ...(sellPrice !== undefined && { sellPrice: Number(sellPrice) }),
    ...(qty !== undefined && { qty: Number(qty) }),
    ...(img !== undefined && { img }),
    updatedAt: new Date()
  };

  res.json(products[index]);
});

app.delete("/api/items/:id", (req, res) => {
  const index = products.findIndex(p => p.id === req.params.id);
  if (index === -1) {
    return res.status(404).json({ success: false, message: "ุงูุตูู ุบูุฑ ููุฌูุฏ" });
  }

  products.splice(index, 1);
  res.json({ success: true, message: "ุชู ุญุฐู ุงูุตูู ุจูุฌุงุญ" });
});

app.post("/api/ai", (req, res) => {
  const { prompt } = req.body;
  
  if (!prompt) {
    return res.status(400).json({ success: false, message: "ุงูุณุคุงู ูุทููุจ" });
  }

  let response = "ุนุฐุฑุงูุ ูุง ูููููู ุงูุฅุฌุงุจุฉ ุนูู ูุฐุง ุงูุณุคุงู ุญุงููุงู.";
  
  const lowerPrompt = prompt.toLowerCase();
  
  if (lowerPrompt.includes("ุณุนุฑ") && lowerPrompt.includes("ุณูู")) {
    response = "ุฃุณุนุงุฑ ุงูุฃุณูุงู ุงููุญุงุณูุฉ ุชุชุฑุงูุญ ุจูู 15-25 ุฌููู ุญุณุจ ุงูููุน ูุงูุณููู. ุฃูุตุญ ุจูุฑุงุฌุนุฉ ุงูุณูู ููุฃุณุนุงุฑ ุงูุญุงููุฉ.";
  } else if (lowerPrompt.includes("ุจุทุงุฑูุฉ")) {
    response = "ุจุทุงุฑูุงุช AAA ุนุงุฏุฉ ุชูุจุงุน ุจูุงูุด ุฑุจุญ 25-35%. ุฅุฐุง ูุงู ุณุนุฑ ุงูุดุฑุงุก 2.25 ุฌูููุ ูููู ุจูุนูุง ุจู 3-3.25 ุฌููู.";
  } else if (lowerPrompt.includes("ูุตุจุงุญ") || lowerPrompt.includes("ููุจุฉ")) {
    response = "ูุตุงุจูุญ LED ููุง ูุงูุด ุฑุจุญ ุฌูุฏ 40-50%. ุงููุตุงุจูุญ 9 ูุงุท ุชูุจุงุน ุนุงุฏุฉ ุจูู 10-15 ุฌููู.";
  } else if (lowerPrompt.includes("ูุงุจู") || lowerPrompt.includes("ุณูู")) {
    response = "ูุงุจูุงุช USB ููุน C ููุง ุทูุจ ุนุงูู. ูุงูุด ุฑุจุญ 30-40% ููุงุณุจ. ุงูุฃุณุนุงุฑ ุชุชุฑุงูุญ 6-12 ุฌููู ุญุณุจ ุงูุฌูุฏุฉ.";
  } else if (lowerPrompt.includes("ูุตูุญุฉ") || lowerPrompt.includes("ุงูุชุฑุงุญ")) {
    response = "ุฃูุตุญ ุจูุฑุงูุจุฉ ุงููุฎุฒูู ุจุงุณุชูุฑุงุฑ ูุชุญุฏูุซ ุงูุฃุณุนุงุฑ ุญุณุจ ุงูุณูู. ุฑูุฒ ุนูู ุงูุฃุตูุงู ุณุฑูุนุฉ ุงูุญุฑูุฉ.";
  }
  
  res.json({ text: response });
});

// Serve static files
const clientPath = path.join(__dirname, "../client");
app.use(express.static(clientPath));

// Handle client-side routing
app.get('*', (req, res) => {
  if (!req.path.startsWith('/api')) {
    res.sendFile(path.join(clientPath, 'index.html'));
  }
});

app.listen(PORT, "0.0.0.0", () => {
  console.log(`๐ Arabic Store Management System running on http://0.0.0.0:${PORT}`);
  console.log(`๐ฑ ูุฑุญุจุงู ุจู ูู ูุธุงู ุฅุฏุงุฑุฉ ูุชุฌุฑ ุฃุจูุงูููุฑ!`);
});